<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>/**
 All Possible Subsets
 
 Given a set of distinct integers, return all possible subsets.
 
 Technique used: Backtracking
 **/

func subsets(_ nums: [Int]) -&gt; [[Int]] {
    var result: [[Int]] = []
    var current: [Int] = []
    
    backtrack(nums, 0, &amp;current, &amp;result)
    
    return result
}

func backtrack(_ nums: [Int], _ index: Int, _ current: inout [Int], _ result: inout [[Int]]) {
    result.append(current)
    
    for i in index..&lt;nums.count {
        current.append(nums[i])
        
        backtrack(nums, i + 1, &amp;current, &amp;result)
        
        current.removeLast()
    }
}

let numbers = [1, 2, 3]
print(subsets(numbers))
</string>
			<key>ModifiedRange</key>
			<string>{0, 648}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
